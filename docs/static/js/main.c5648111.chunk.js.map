{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","value","setValue","onSubmit","e","preventDefault","trim","length","categories","type","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","cat","ReactDOM","render","document","getElementById"],"mappings":"2MA8BeA,EA3BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACbC,mBAAS,IADI,mBAChCC,EADgC,KACzBC,EADyB,KAgBvC,OACI,0BAAMC,SAVW,SAAAC,GACjBA,EAAEC,iBAEEJ,EAAMK,OAAOC,OAAS,IACtBR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAcO,OACtCN,EAAS,OAMT,2BAAOO,KAAK,OAAOC,SAfD,SAAAN,GACtBF,EAASE,EAAEO,OAAOV,QAckCA,MAAOA,M,uBCrBtDW,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCAETC,EAHa,iDAGmCC,UAAUH,GAH7C,6BACJ,oCADI,SAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCWLO,EATK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC9B,OACI,yBAAKc,UAAW,0CACZ,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCqBDO,EAvBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACZb,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KActC,OARAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACnBf,KAAMkB,EACNL,SAAS,SAElB,CAACpB,IAEGqB,EDZ2BK,CAAa1B,GAAjCa,EADgB,EACtBN,KAAca,EADQ,EACRA,QAEtB,OACI,oCACI,wBAAIJ,UAAW,qCAAsChB,GAEjDoB,GAAW,yCAEf,yBAAKJ,UAAW,aAERH,EAAOJ,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEUjBkB,EAxBM,WAAM,MAEazC,mBAAS,CACzC,sBAHmB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAUvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQS,EAAWc,KAAI,SAAAoB,GAAG,OAAI,kBAAC,EAAD,CAASF,IAAKE,EAAK7B,SAAU6B,U,MChBvEC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c5648111.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleInputChange = e => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (value.trim().length > 2) {\r\n            setCategories(categories => [value,...categories]);\r\n            setValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" onChange={handleInputChange} value={value} />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n    const apiKey = 'Kyu5rWwGVJg2S6MUfPzvZ03PDWE3b2wC';\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n};","import React from 'react';\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className={'card animate__animated animate__fadeIn'}>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className={\"animate__animated animate__fadeIn\"}>{category}</h3>\r\n            {\r\n                loading && <p>Loading...</p>\r\n            }\r\n            <div className={\"card-grid\"}>\r\n                {\r\n                    images.map((img) =>\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from './../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => setState({\r\n                data: imgs,\r\n                loading: false\r\n            }));\r\n    }, [category]);\r\n\r\n    return state;\r\n};","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState([\r\n        'Dragon Ball Super',\r\n    ]);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories(categories => [...categories, 'Nueva']);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(cat => <GifGrid key={cat} category={cat} />)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}